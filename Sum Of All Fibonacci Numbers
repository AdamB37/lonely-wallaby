Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. 
Every additional number in the sequence is the sum of the two previous numbers. 
The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than 10 are 1, 1, 3, and 5.


var recursive = function (arr,num){
  let nextNum = arr[arr.length-1] + arr[arr.length-2];
  
  if(nextNum <= num){
    arr.push(nextNum);
    recursive(arr,num);
  }
  else{
    return arr;
  }
};

function sumFibs(num) {
  let arr = [];
  arr[0] = 1;
  arr[1] = 1;
  recursive(arr,num);
  let fibs = recursive(arr, num);
  var sumOddFibs = 0;
  for(var i = 0; i < fibs.length; i++){
    if(fibs[i] % 2 !== 0){
      sumOddFibs += fibs[i];
    }
  }
  
  return sumOddFibs;
}

sumFibs(4);
